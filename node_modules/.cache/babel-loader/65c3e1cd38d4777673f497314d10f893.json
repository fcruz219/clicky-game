{"ast":null,"code":"var _jsxFileName = \"/Users/francisco/Documents/UCF/Homework/week 10/clicky-game/src/App.js\";\nimport React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport NavBar from \"./components/NavBar/navbar\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./characters.json\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      friends,\n      topScore: 0,\n      currentScore: 0,\n      right: \"\",\n      clicked: []\n    };\n\n    this.clickCard = id => {\n      const element = document.getElementById(\"wrapper\");\n\n      if (!this.state.clicked.includes(id)) {\n        element.classList.remove(\"shake\");\n        this.setState({\n          clicked: this.state.clicked.concat(id),\n          currentScore: this.state.currentScore + 1\n        });\n        console.log(this.state.currentScore);\n      } //user's score reset to 0 if they click the same image more than once.\n      else {\n          element.classList.add(\"shake\");\n          this.setState({\n            clicked: [],\n            currentScore: 0\n          });\n        }\n\n      this.setCurrentScore();\n      this.shuffleCards();\n    };\n\n    this.shuffleCards = () => {\n      for (let i = 0; i < friends.length; i++) {\n        let elem = friends[i];\n        let randomNum = Math.floor(Math.random() * friends.length);\n        friends[i] = friends[randomNum];\n        friends[randomNum] = elem;\n      }\n    };\n\n    this.setCurrentScore = () => {\n      if (this.state.currentScore > this.state.topScore) {\n        return this.setState({\n          topScore: this.state.currentScore\n        });\n      }\n    };\n  }\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      highScore: this.state.topScore,\n      clickCount: this.state.currentScore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Try to click on each character, but don't hit any duplicates!\"), this.state.friends.map(friend => React.createElement(FriendCard, {\n      id: friend.id,\n      key: friend.id,\n      name: friend.name,\n      image: friend.image,\n      clickCard: this.clickCard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/francisco/Documents/UCF/Homework/week 10/clicky-game/src/App.js"],"names":["React","Component","FriendCard","NavBar","Wrapper","Title","friends","App","state","topScore","currentScore","right","clicked","clickCard","id","element","document","getElementById","includes","classList","remove","setState","concat","console","log","add","setCurrentScore","shuffleCards","i","length","elem","randomNum","Math","floor","random","render","map","friend","name","image"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport NavBar from \"./components/NavBar/navbar\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./characters.json\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    topScore: 0,\n    currentScore: 0,\n    right: \"\",\n    clicked: []\n  };\n\n  clickCard = (id) => {\n    const element = document.getElementById(\"wrapper\");\n\n    if (!this.state.clicked.includes(id)){\n      element.classList.remove(\"shake\");\n      this.setState({\n        clicked: this.state.clicked.concat(id),\n        currentScore: this.state.currentScore+1\n        })\n        console.log(this.state.currentScore);\n    }\n    //user's score reset to 0 if they click the same image more than once.\n    else {\n      element.classList.add(\"shake\");\n      this.setState({\n        clicked: [],\n        currentScore: 0\n        })\n    }\n    this.setCurrentScore();\n    this.shuffleCards();\n  }\n\n\n  shuffleCards = () => {\n    for (let i =0; i<friends.length; i++) {\n      let elem = friends[i];\n      let randomNum=Math.floor(Math.random() * friends.length);\n      friends[i]=friends[randomNum];\n      friends[randomNum]=elem;\n    }\n  }\n\n  setCurrentScore = () => {\n    if (this.state.currentScore > this.state.topScore) {\n      return this.setState({topScore: this.state.currentScore})\n    }\n  }\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <div>\n      <NavBar\n        highScore={this.state.topScore}\n        clickCount={this.state.currentScore}\n      />\n\n      <Wrapper>\n        <Title>Try to click on each character, but don't hit any duplicates!</Title>\n        {this.state.friends.map(friend => (\n          <FriendCard\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n            clickCard={this.clickCard}\n          />\n        ))}\n      </Wrapper>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}